-- Task 1
select 'Оценка > зачет, Ведомости >= 2010-06-18' as task_1;
select Н_ОЦЕНКИ.КОД, Н_ВЕДОМОСТИ.ДАТА from Н_ОЦЕНКИ right
    join Н_ВЕДОМОСТИ on Н_ВЕДОМОСТИ.ОЦЕНКА = Н_ОЦЕНКИ.КОД 
    where (Н_ВЕДОМОСТИ.ДАТА = '2010-06-18 00:00:00' and Н_ОЦЕНКИ.КОД >= 'зачет');



-- Task 2
select 'Отчество = Владимирович, Ведомости > 2022-06-08' as task_2;
-- 1. Само задание, людей с таким отчеством ведомости старше 2022 нет
select Н_ЛЮДИ.ФАМИЛИЯ, Н_ВЕДОМОСТИ.ДАТА as ДАТА_ВЕДОМОСТИ, Н_СЕССИЯ.ДАТА as ДАТА_СЕССИИ from Н_ЛЮДИ
    join Н_ВЕДОМОСТИ on Н_ВЕДОМОСТИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
    join Н_СЕССИЯ on Н_СЕССИЯ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
    where Н_ЛЮДИ.ОТЧЕСТВО = 'Владимирович' and Н_ВЕДОМОСТИ.ДАТА > '2022-06-08';

-- 2. Ведомости 2003 года
select Н_ЛЮДИ.ФАМИЛИЯ, Н_ВЕДОМОСТИ.ДАТА as ДАТА_ВЕДОМОСТИ, Н_СЕССИЯ.ДАТА as ДАТА_СЕССИИ from Н_ЛЮДИ
    join Н_ВЕДОМОСТИ on Н_ВЕДОМОСТИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
    join Н_СЕССИЯ on Н_СЕССИЯ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
    where Н_ЛЮДИ.ОТЧЕСТВО = 'Владимирович' and Н_ВЕДОМОСТИ.ДАТА > '2003-01-01' and Н_ВЕДОМОСТИ.ДАТА < '2004-01-01';

-- 3. Кол-во людей с таким отчеством и ведомостями 2003 года
select ФАМИЛИЯ, count(ФАМИЛИЯ) from 
    (select Н_ЛЮДИ.ФАМИЛИЯ, Н_ВЕДОМОСТИ.ДАТА, Н_СЕССИЯ.ДАТА from Н_ЛЮДИ
        join Н_ВЕДОМОСТИ on Н_ВЕДОМОСТИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
        join Н_СЕССИЯ on Н_СЕССИЯ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
        where Н_ЛЮДИ.ОТЧЕСТВО = 'Владимирович' and Н_ВЕДОМОСТИ.ДАТА > '2003-01-01' and Н_ВЕДОМОСТИ.ДАТА < '2004-01-01')
    group by ФАМИЛИЯ;



-- Task 3. Число фамилий и имен без учета повторений (DISTINCT нельзя)
select 'ФИО без учета повторений' as task_3;
-- 1. Сортировка по имени и фамилии с точностью до ё
select count(ИМЯ) as ФИ_Ё
from
    (select Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ФАМИЛИЯ from Н_ЛЮДИ 
    group by Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ФАМИЛИЯ);

-- 2.1. Сортировка по имени с точностью до ё
select count(ИМЯ) as ИМЯ
from
    (select Н_ЛЮДИ.ИМЯ from Н_ЛЮДИ group by Н_ЛЮДИ.ИМЯ);

-- 2.2. Сортировка по имени, учитывая, что имена с е и ё будут одинаковыми (Артем и Артём)
select count(ИМЯ) as ИМЯ
from
    (select ИМЯ from (select replace(Н_ЛЮДИ.ИМЯ, 'ё', 'е') as ИМЯ from Н_ЛЮДИ)
    group by ИМЯ);

-- 3. Сортировка по фамилии
select count(ФАМИЛИЯ) as ФАМИЛИЯ
from
    (select Н_ЛЮДИ.ФАМИЛИЯ from Н_ЛЮДИ group by Н_ЛЮДИ.ФАМИЛИЯ);



-- Task 4
select 'Различные отчества, кол-во > 50, на очной форме обучения' as task_4;
select ОТЧЕСТВО, count(ОТЧЕСТВО) as КОЛИЧЕСТВО from
    (select Н_ЛЮДИ.ОТЧЕСТВО from Н_ЛЮДИ
    join 
        (select ЧЛВК_ИД from Н_УЧЕНИКИ
        join 
            (select Н_ПЛАНЫ.ИД as ПЛАНЫ_ИД from Н_ПЛАНЫ 
            join Н_ФОРМЫ_ОБУЧЕНИЯ on Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД
            where Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ = 'Очная')
        on Н_УЧЕНИКИ.ПЛАН_ИД = ПЛАНЫ_ИД) 
    on ЧЛВК_ИД = Н_ЛЮДИ.ИД)
group by ОТЧЕСТВО having count(ОТЧЕСТВО) >= 50
order by ОТЧЕСТВО;  



-- Task 5
select 'Средний возраст групп > min возраста группы 1101' as task_5;
select ГРУППА, round(avg(ВОЗРАСТ)) as СРЕДНИЙ_ВОЗРАСТ, (select min(ВОЗРАСТ) where ГРУППА::int = 1101)
from
    (select distinct Н_УЧЕНИКИ.ГРУППА, (greatest((select max(ДАТА_РОЖДЕНИЯ) from Н_ЛЮДИ), NOW())::date - ДАТА_РОЖДЕНИЯ::date)::int/365 as ВОЗРАСТ 
    from Н_УЧЕНИКИ 
    join Н_ГРУППЫ_ПЛАНОВ on Н_ГРУППЫ_ПЛАНОВ.ГРУППА = Н_УЧЕНИКИ.ГРУППА
    join Н_ЛЮДИ on Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД)
group by ГРУППА
having avg(ВОЗРАСТ) > 6
order by ГРУППА;



-- Task 6
select 'Зачислены после 2012 сентября на первый курс, очно/заочно, специальность 230101' as task_6;
select Н_УЧЕНИКИ.ГРУППА, Н_ЛЮДИ.ИД, ФАМИЛИЯ, ИМЯ, ОТЧЕСТВО, Н_УЧЕНИКИ.П_ПРКОК_ИД, Н_УЧЕНИКИ.СОСТОЯНИЕ
from Н_ЛЮДИ
join Н_УЧЕНИКИ on Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
where exists
    (select ЧЛВК_ИД, НАЧАЛО, КУРС, ФО, КОД_НАПРСПЕЦ
    from (select ЧЛВК_ИД, НАЧАЛО, ПЛАН_ИД, ФО, СОСТОЯНИЕ from Н_УЧЕНИКИ
        join 
            (select Н_ПЛАНЫ.ИД as ПЛАНЫ_ИД, Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ as ФО from Н_ПЛАНЫ 
            join Н_ФОРМЫ_ОБУЧЕНИЯ on Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД
            where Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ = 'Очная' or Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ = 'Заочная')
        on Н_УЧЕНИКИ.ПЛАН_ИД = ПЛАНЫ_ИД)
    join 
        (select distinct Н_ПЛАНЫ.ИД as ПЛАНЫ_ИД, Н_ПЛАНЫ.КУРС, Н_НАПР_СПЕЦ.КОД_НАПРСПЕЦ
        from Н_ПЛАНЫ, Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ, Н_НАПР_СПЕЦ
        where Н_ПЛАНЫ.НАПС_ИД = Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.ИД 
            and Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.НС_ИД = Н_НАПР_СПЕЦ.ИД 
            and Н_НАПР_СПЕЦ.КОД_НАПРСПЕЦ::int = 230101
            and Н_ПЛАНЫ.КУРС::int = 1)
    on ПЛАН_ИД = ПЛАНЫ_ИД
    where НАЧАЛО >= '2012-09-01'
    );



-- Task 7
select 'Не студенты ИТМО (нет информации в Н_УЧЕНИКИ)' as task_7;
select ИД, ФАМИЛИЯ, ИМЯ, ДАТА_РОЖДЕНИЯ from Н_ЛЮДИ where not exists (select ЧЛВК_ИД from Н_УЧЕНИКИ where ЧЛВК_ИД = Н_ЛЮДИ.ИД);
